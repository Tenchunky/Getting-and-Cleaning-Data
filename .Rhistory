sum(is.na(EDU$Long.Name))
MergedLogical <- is.na(MergedData$Ranking) | is.na(MergedData$Long.Name)
nrow(MergedData) - sum(MergedLogical)
OrderedMergedData <- MergedData[order(MergedData$Rank),]
OrderedMergedData$Ranking[13]
OrderedMergedData$Ranking[1]
OrderedMergedData$Long.Name[1]
OrderedMergedData <- MergedData[order(MergedData$Rank,decreasing = TRUE),]
OrderedMergedData$Ranking[13]
OrderedMergedData$Long.Name[13]
str(OrderedMergedData)
OrderedMergedData$Long.Name[235]
OrderedMergedData$Long.Name[190]
levels(OrderedMergedData$Income.Group)
nrow(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income:OECD"]
nrow(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income:OECD"])
nrow(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income:OECD"])
nrow(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income:OECD"], na.omit=TRUE)
OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income:OECD"]
OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"]
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"], na.rm=TRUE)
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"], na.rm=TRUE)/sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"))
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"], na.rm=TRUE) / sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"))
sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"))
sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"]))
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"], na.rm=TRUE) / sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"]))
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: nonOECD"], na.rm=TRUE) / sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: nonOECD"]))
quantile(OrderedMergedData$Ranking, c(0.2,0.4,0.6,0.8))
quantile(OrderedMergedData$Ranking, c(0.2,0.4,0.6,0.8), na.rm=TRUE)
OrderedMergedData$Ranking
EDU<-read.csv("getdata-data-EDSTATS_Country.csv")
GDP<- read.csv("getdata-data-GDP.csv",header = FALSE, skip= 5, nrow=190)
names(GDP)<- c("CountryCode", "Ranking", "NA", "Long Name", "Economy")
intersect(names(GDP), names(EDU))
MergedData <- merge(EDU,GDP, all=TRUE)
sum(is.na(GDP$Ranking))
sum(is.na(EDU$Long.Name))
MergedLogical <- is.na(MergedData$Ranking) | is.na(MergedData$Long.Name)
nrow(MergedData) - sum(MergedLogical)
FinalMergedData<- MergedData[MergedLogical,]
nrow(FinalMergedData)
EDU<-read.csv("getdata-data-EDSTATS_Country.csv")
GDP<- read.csv("getdata-data-GDP.csv",header = FALSE, skip= 5, nrow=190)
names(GDP)<- c("CountryCode", "Ranking", "NA", "Long Name", "Economy")
intersect(names(GDP), names(EDU))
MergedData <- merge(EDU,GDP, all=TRUE)
sum(is.na(GDP$Ranking))
sum(is.na(EDU$Long.Name))
MergedLogical <- is.na(MergedData$Ranking) | is.na(MergedData$Long.Name)
nrow(MergedData) - sum(MergedLogical)
FinalMergedData<- MergedData[!MergedLogical,]
nrow(FinalMergedData)
EDU<-read.csv("getdata-data-EDSTATS_Country.csv")
GDP<- read.csv("getdata-data-GDP.csv",header = FALSE, skip= 5, nrow=190)
names(GDP)<- c("CountryCode", "Ranking", "NA", "Long Name", "Economy")
intersect(names(GDP), names(EDU))
MergedData <- merge(EDU,GDP, all=TRUE)
sum(is.na(GDP$Ranking))
sum(is.na(EDU$Long.Name))
MergedLogical <- is.na(MergedData$Ranking) | is.na(MergedData$Long.Name)
FinalMergedData<- MergedData[!MergedLogical,]
nrow(FinalMergedData)
OrderedMergedData <- FinalMergedData[order(FinalMergedData$Rank,decreasing = TRUE),]
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"], na.rm=TRUE) / sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"]))
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: nonOECD"], na.rm=TRUE) / sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: nonOECD"]))
FinalMergedData[13,]
OrderedMergedData <- FinalMergedData[order(FinalMergedData$Rank,decreasing = TRUE),]
OrderedMergedData[13,]
quantile(OrderedMergedData, 0.8)
quantile(OrderedMergedData$Ranking, 0.8)
OrderedMergedDataQuantile <- OrderedMergedData[OrderedMergedData$Ranking >152,]
OrderedMergedDataQuantile
quantile(OrderedMergedData, 0.2)
quantile(OrderedMergedData$Ranking, 0.2)
OrderedMergedDataQuantile <- OrderedMergedData[OrderedMergedData$Ranking <=38,]
OrderedMergedDataQuantile <- OrderedMergedData[OrderedMergedData$Ranking < quantile(OrderedMergedData$Ranking, 0.2), ]
OrderedMergedDataQuantile
levels(OrderedMergedDataQuantile$Income.Group)
sum(OrderedMergedDataQuantile$Income.Group=="Lower middle income"], na.rm=TRUE)
sum(OrderedMergedDataQuantile$Income.Group=="Lower middle income", na.rm=TRUE)
levels(OrderedMerged$Income.Group)
levels(OrderedMerged$Income.Group)
levels(OrderedMergedData$Income.Group)
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"], na.rm=TRUE)
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group==3], na.rm=TRUE)
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group==1], na.rm=TRUE)
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group==2], na.rm=TRUE)
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="2"], na.rm=TRUE)
?levels
levels(OrderedMergedData$Income.Group)[1]
levels(OrderedMergedData$Income.Group)[2]
levels(OrderedMergedData$Income.Group)[3]
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group==levels(OrderedMergedData$Income.Group)[3]], na.rm=TRUE)
levels(OrderedMergedData$Income.Group)
levels(OrderedMergedData$Income.Group)[3]
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"], na.rm=TRUE) / sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"]))
levels(OrderedMergedData$Income.Group)[2]
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: nonOECD"], na.rm=TRUE) / sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: nonOECD"]))
OrderedMergedDataQuantile <- OrderedMergedData[OrderedMergedData$Ranking < quantile(OrderedMergedData$Ranking, 0.2), ]
levels(OrderedMergedDataQuantile$Income.Group)
sum(OrderedMergedDataQuantile$Income.Group=="Lower middle income"], na.rm=TRUE)
levels(OrderedMergedData$Income.Group)
levels(OrderedMergedData$Income.Group)[3]
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"], na.rm=TRUE) / sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: OECD"]))
levels(OrderedMergedData$Income.Group)[2]
sum(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: nonOECD"], na.rm=TRUE) / sum(!is.na(OrderedMergedData$Ranking[OrderedMergedData$Income.Group=="High income: nonOECD"]))
OrderedMergedDataQuantile <- OrderedMergedData[OrderedMergedData$Ranking < quantile(OrderedMergedData$Ranking, 0.2), ]
levels(OrderedMergedDataQuantile$Income.Group)
sum(OrderedMergedDataQuantile$Income.Group=="Lower middle income"], na.rm=TRUE)
OrderedMergedDataQuantile <- OrderedMergedData[OrderedMergedData$Ranking < quantile(OrderedMergedData$Ranking, 0.2), ]
OrderedMergedDataQuantile <- OrderedMergedData[OrderedMergedData$Ranking < quantile(OrderedMergedData$Ranking, 0.2), ]
levels(OrderedMergedDataQuantile$Income.Group)
levels(OrderedMergedDataQuantile$Income.Group)[5]
OrderedMergedDataQuantile
str(OrderedMergedDataQuantile)
sum(OrderedMergedDataQuantile$Income.Group=="Lower middle income"], na.rm=TRUE)
sum(OrderedMergedDataQuantile$Income.Group=="Lower middle income"])
sum(OrderedMergedDataQuantile$Income.Group=="Lower middle income", na.rm=TRUE)
train <- read.csv("train//X_train.txt")
str(train)
head(train)
train <- read.csv(file = "train//X_train.txt", sep = " ")
training_set <- read.csv(file = "train//X_train.txt", sep = " ")
training_label <- read.csv(file = "train//y_train.txt", sep = " ")
training_label <- read.csv(file = "train//y_train.txt")
View(training_label)
View(training_set)
training_set <- read.csv(file = "train//X_train.txt",header = FALSE, sep = " ")
View(train)
View(train)
rm(train)
View(training_set)
training_set <- read.csv(file = "train//X_train.txt",header = FALSE, sep = "")
tail(training_set)
head(training_set)
training_label <- read.csv(file = "train//y_train.txt", sep = "")
training_label <- read.csv(file = "train//y_train.txt", header = FALSE, sep = "")
activity_label <- read.csv(file = "activity_labels.txt", header = FALSE, sep = "")
View(training_label)
View(activity_label)
features_labels <- read.csv(file = "features.txt", header = FALSE, sep = "")
View(activity_label)
View(features_labels)
unique(features_labels)
subject_test <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "")
View(subject_test)
View(activity_label)
activity_labels <- read.csv(file = "activity_labels.txt", header = FALSE, sep = "")
feature_labels <- read.csv(file = "features.txt", header = FALSE, sep = "")
test_subjects <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "")
test_labels <- read.csv(file = "test/y_test.txt", header = FALSE, sep = "")
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "")
subject_train <- read.csv(file = "train/subject_train.txt", header = FALSE, sep = "")
train_labels <- read.csv(file = "train/y_train.txt", header = FALSE, sep = "")
train <- read.csv(file = "train/X_train.txt", header = FALSE, sep = "")
head(train)
class(activity_labels)
activity_labels
class(feature_labels)
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
View(feature_labels)
head(test)
test[1]
test[,1]
test[1,]
test <- mutate(test,"test")
test[1,]
source('~/R/run_analysis.R')
names(test)
names(test) <- feature_labels
names(test)
View(feature_labels)
names(test) <- feature_labels[,2]
names(test)
names(test) <- feature_labels[,2]
test <- mutate(Subject = test_subjects, test)
source('~/R/run_analysis.R')
head(test,3)
test <- mutate(test,Subject = test_subjects)
names(test)
source('~/R/run_analysis.R')
head(test)
test %>% rename(feature_labels[,2])
names(test) <- feature_labels[,2]
head(test)
mutate(test, Subject=test_subjects)
test_subjects
mutate(test, Subject=test_subjects)
test
names(test) <- C(feature_labels[,2],"Subect")
head(test)
mutate(test, Subject="")
test2<- mutate(test, Subject="")
test2<- mutate(test, Ssubject="")
test2<- mutate(.data = test, Subject="")
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
View(test)
test2<- mutate(.data = test, "Subject"="")
View(test)
test2<- cbind("test",test_subjects, test)
head(test2)
names(test) <- C("type", "subject", feature_labels[,2])
?C
?c
names(test) <- c("type", "subject", feature_labels[,2])
names(test2) <- c("type", "subject", feature_labels[,2])
rm(test2)
test<- cbind("test",test_subjects, test)
names(test) <- c("type", "subject", feature_labels[,2])
View(test_labels)
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
View(test)
head(test)
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "")
test<- cbind(test_subjects, test_labels, "test", test)
head(test)
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "")
names(test) <- feature_labels[,2]
test<- cbind(test_subjects, test_labels, set="test", test)
head(test)
source('~/R/run_analysis.R')
View(test)
source('~/R/run_analysis.R')
View(test)
test_subjects <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "", col.name="subject")
View(test_subjects)
test_subjects <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "", col.name="subjects")
View(test_subjects)
test_subjects <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "", col.name="subject")
View(test_subjects)
View(test_labels)
activity_labels <- read.csv(file = "activity_labels.txt", header = FALSE, sep = "")
feature_labels <- read.csv(file = "features.txt", header = FALSE, sep = "")
test_subjects <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "", col.name="subject")
View(test_subjects)
test_subjects <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "", col.name="subject")
test_labels <- read.csv(file = "test/y_test.txt", header = FALSE, sep = "", col.name="activity")
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "", col.name=feature_labels[,2])
View(test_labels)
View(test)
source('~/R/run_analysis.R')
Merged <- rbind(test,train)
?rbind
names(test)
names(train)
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
rm(test_subject, test_activity)
rm,(train_subject, train_activity)
rm(train_subject, train_activity)
rm(test, train)
source('~/R/run_analysis.R')
merged$activity <- activity_labels[merged$activity,2]
View(merged)
source('~/R/run_analysis.R')
View(merged)
merged_names <- names(merged)
'mean' %in% merged_names
"mean" %in% merged_names
grepl("mean",merged_names)
grepl("activity",merged_names)
sum(grepl("activity",merged_names))
sum(grepl("subject",merged_names))
sum(grepl("set",merged_names))
sum(grepl("mean",merged_names))
sum(grepl("std",merged_names))
merged_col_filter <- grepl("mean",names(merged)) | grepl("mstd",names(merged))
merged_col_filter[1:3]<- TRUE
merged_col_filter
merged_col_filter <- grepl("mean",names(merged)) | grepl("mstd",names(merged))
sum(merged_col_filter)
merged_col_filter[1:3]<- TRUE
sum(merged_col_filter)
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
merged2<- merged[,merged_filter]
merged <- merged[,merged_filter]
View(merged)
source('~/R/run_analysis.R')
View(merged)
names(merged)
source('~/R/run_analysis.R')
merged_filter <- grepl("mean()",names(merged)) | grepl("std()",names(merged))
activity_labels <- read.csv(file = "activity_labels.txt", header = FALSE, sep = "", col.name=c("activity_id", "activity_name"))
feature_labels <- read.csv(file = "features.txt", header = FALSE, sep = "", col.name=c("feature_id", "feature_name"))
View(activity_labels)
View(feature_labels)
test_subject <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "", col.name="subject")
View(test_subject)
test_activity <- read.csv(file = "test/y_test.txt", header = FALSE, sep = "", col.name="activity")
View(test_activity)
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "", col.name=feature_labels[,2])
# Step 0: Load all relevant data sets from the 'Human Activity Recognition Using Smartphones Dataset,
#         Version 1.0'. As per the "README.txt", the loaded data sets have been checked for the following:
#              a.   'activity_labels' (6x2) contains the (6) activity identifier number and the
#                   corresponding activity name.
#              b.   'feature_labels' (561x2) contains the (561) feature identifier number and the
#                   corresponding feature name.
#              c.   'test_subjects' (2947x1) contains the subject's identifier number for each test.
#              d.   'test_labels' (2947x1) contains the activity identifier number for each test.
#              e.   'test' (2947x561) contains the test data set of 2947 observations.
#              f.   'train_subjects' (7352x1) contains the subject's identifier number for each training.
#              g.   'train_labels' (7352x1) contains the activity identifier number for each training.
#              h.   'train' (7352x561) contains the training data set of 7352 observations.
# Load activity and feature labels
activity_labels <- read.csv(file = "activity_labels.txt", header = FALSE, sep = "", col.name=c("activity_id", "activity_name"))
feature_labels <- read.csv(file = "features.txt", header = FALSE, sep = "", col.name=c("feature_id", "feature_name"))
# Load test data sets
test_subject <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "", col.name="subject")
test_activity <- read.csv(file = "test/y_test.txt", header = FALSE, sep = "", col.name="activity")
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "", col.name=feature_labels[,2])
# Load training data sets
train_subject <- read.csv(file = "train/subject_train.txt", header = FALSE, sep = "", col.name="subject")
train_activity <- read.csv(file = "train/y_train.txt", header = FALSE, sep = "", col.name="activity")
train <- read.csv(file = "train/X_train.txt", header = FALSE, sep = "", col.name=feature_labels[,2])
rm(merged,merged_col_filter,merged_filter,merged2)
rm(merged_names)
source('~/R/run_analysis.R')
test <- cbind(test_subject, test_activity, set="test", test)
train <- cbind(train_subject, train_activity, set="training", train)
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
# Load activity and feature labels with column names. Column names is supposed to be part of step 4, but I
?grep
merged_filter <- grepl("mean()",names(merged)) | grepl("std()",names(merged))
sum(merged_filter)
merged_filter[1:2] <- TRUE
merged_subset <- merged[,merged_filter]
names(merged_subset)
View(merged_subset)
list(names(merged_subset))
merged_filter <- grepl("mean()",names(merged)) | grepl("std()",names(merged))
sum(merged_filter)
merged_filter <- grepl("[Mm]ean\\(\\)|std\\(\\)",names(merged))
sum(merged_filter)
merged_filter <- grepl("mean\\(\\)",names(merged)) | grepl("std\\(\\)",names(merged))
sum(merged_filter)
merged_filter <- grepl("mean()",names(merged)) | grepl("std()",names(merged))
sum(merged_filter)
sum(grepl("mean\\(\\)",names(merged)) | grepl("std\\(\\)",names(merged)))
sum(grepl("mean\\(\\)",names(merged)))
sum(grepl("mean\\(\\)",names(merged),perl = TRUE))
names(merged)[4]
sum(grepl("mean\\.\\.)",names(merged)))
sum(grepl("mean..",names(merged)))
sum(grepl("mean",names(merged)))
sum(grepl("mean\\.\\.",names(merged)))
sum(grepl("mean\\.\\.|std\\.\\.",names(merged)))
sum(grepl("std",names(merged)))
sum(grepl("std\\.",names(merged)))
sum(grepl("std\\.\\.",names(merged)))
sum(grepl("mean\\.\\.|std\\.\\.",names(merged)))
sum(grepl("mean\\.\\.",names(merged)) | grepl("std\\.\\.",names(merged)))
View(feature_labels)
merged_filter <- grepl("mean\\.\\.|std\\.\\.",names(merged))
merged_filter[1:2] <- TRUE
merged_subset <- merged[,merged_filter]
View(merged_subset)
View(merged)
source('~/R/run_analysis.R')
View(merged_subset)
colnames(merged)<- feature_labels
colname(merged)
colnames(merged)
colnames(merged)<- feature_labels[,2]
colnames(merged)
test <- cbind(test_subject, test_activity, test)
train <- cbind(train_subject, train_activity, train)
# Merge 'test' and 'train' and save this to 'merged'
merged <- rbind(test, train)
merged_filter <- c(TRUE, TRUE, grepl("mean\\.\\.|std\\.\\.",feature_labels[,2]))
# Step 0: Load all relevant data sets from the 'Human Activity Recognition Using Smartphones Dataset,
#         Version 1.0'. As per the "README.txt", the loaded data sets have been checked for the following:
#              a.   'activity_labels' (6x2) contains the (6) activity identifier number and the
#                   corresponding activity name.
#              b.   'feature_labels' (561x2) contains the (561) feature identifier number and the
#                   corresponding feature name.
#              c.   'test_subjects' (2947x1) contains the subject's identifier number for each test.
#              d.   'test_labels' (2947x1) contains the activity identifier number for each test.
#              e.   'test' (2947x561) contains the test data set of 2947 observations.
#              f.   'train_subjects' (7352x1) contains the subject's identifier number for each training.
#              g.   'train_labels' (7352x1) contains the activity identifier number for each training.
#              h.   'train' (7352x561) contains the training data set of 7352 observations.
# Load activity and feature labels with column names. Column names is supposed to be part of step 4, but I
# prefer to implement it every step along the way for better readability.
activity_labels <- read.csv(file = "activity_labels.txt", header = FALSE, sep = "")
feature_labels <- read.csv(file = "features.txt", header = FALSE, sep = "")
# Load test and training data sets with column names. Column names is supposed to be part of step 4, but I
# prefer to implement it every step along the way for better readability.
test_subject <- read.csv(file = "test/subject_test.txt", header = FALSE, sep = "")
test_activity <- read.csv(file = "test/y_test.txt", header = FALSE, sep = "")
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "")
train_subject <- read.csv(file = "train/subject_train.txt", header = FALSE, sep = "")
train_activity <- read.csv(file = "train/y_train.txt", header = FALSE, sep = "")
train <- read.csv(file = "train/X_train.txt", header = FALSE, sep = "")
# Step 1: Merges the training and the test sets to create one data set.
# Add subject and activity columns to front of 'test' and 'train'.
test <- cbind(test_subject, test_activity, test)
train <- cbind(train_subject, train_activity, train)
# Merge 'test' and 'train' and save this to 'merged'
merged <- rbind(test, train)
merged_filter <- c(TRUE, TRUE, grepl("mean\\.\\.|std\\.\\.",feature_labels[,2]))
sum(merged_filter)
merged_filter <- c(TRUE, TRUE, grepl("mean\\(\\)|std\\(\\)",feature_labels[,2]))
sum(merged_filter)
merged_filter <- c(TRUE, TRUE, grepl("mean\\(\\) | std\\(\\)",feature_labels[,2]))
sum(merged_filter)
merged_filter <- c(TRUE, TRUE, grepl("mean\\(\\)|std\\(\\)",feature_labels[,2]))
sum(merged_filter)
View(merged)
colnames(merged) <- c("subject", "activity", feature_labels[,2])
View(merged)
View(feature_labels)
View(merged)
names(merged) <- c("subject", "activity", feature_labels[,2])
names(merged)
c("subject", "activity", feature_labels[,2])
c("subject", "activity", feature_labels[1,2])
c("subject", "activity", feature_labels[2,])
View(feature_labels)
c("subject", "activity", feature_labels[,2])
c("subject", "activity", feature_labels[1:561,2])
c("subject", "activity", feature_labels[1:561,2])
feature_labels[,2]
c("subject", "activity", feature_labels[,2])
feature_labels[,2]
?c
c("subject", "activity", as.list(feature_labels[,2])
)
colnames(merged) <- c("subject", "activity", as.list(feature_labels[,2])
)
colnames(merged) <- c("subject", "activity", as.list(feature_labels[,2]))
colnames(merged)
colnames(merged) <- c("subject", "activity", as.character(feature_labels[,2]))
colnames(merged)
class(feature_labels[,2]))
class(feature_labels[,2])
colnames(merged)
merged <- rbind(cbind(test_subject, test_activity, test), cbind(train_subject, train_activity, train))
View(merged)
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "")
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "")
test <- read.csv(file = "test/X_test.txt", header = FALSE, sep = "")
train <- read.csv(file = "train/X_train.txt", header = FALSE, sep = "")
merged <- rbind(cbind(test_subject, test_activity, test), cbind(train_subject, train_activity, train))
# Perform step 4: labelling the columns here instead for simplicity in implementation.
colnames(merged) <- c("subject", "activity", as.character(feature_labels[,2]))
View(merged)
merged_filter <- c(TRUE, TRUE, grepl("mean\\(\\)|std\\(\\)",colnames(merged)
)
sum(merged_filter)
)
merged_filter <- c(TRUE, TRUE, grepl("mean\\(\\)|std\\(\\)",colnames(merged)))
sum(merged_filter)
merged_filter <- grepl("mean\\(\\)|std\\(\\)",colnames(merged))
sum(merged_filter)
merged_filter[1:2] <- TRUE
sum(merged_filter)
merged_subset <- merged[,merged_filter]
merged$activity
merged$activity <- activity_labels[merged$activity,2]
merged$activity
source('~/R/run_analysis.R')
library(dplyr)
?summarise_each
result <- summarise_each(merged_subset, mean, c("subject","activity"))
result <- summarise_each(merged_subset, funs = mean, c("subject","activity"))
result <- summarise_each(merged_subset, funs(mean), c("subject","activity"))
result <- summarise_each(merged_subset, funs(mean), subject)
View(result)
result <- summarise_each(merged_subset, funs(mean), subject, activity)
View(result)
result <- summarise_each(merged_subset, funs(mean), c("subject","activity"))
result <- summarise_each(merged_subset, funs(mean, mean), subject, activity)
result <- merged_subset %>% group_by(subject)
View(result)
result <- merged_subset %>% group_by(subject, activity)
str(result)
result <- merged_subset %>% group_by(subject, activity)
%>% summarise_each(funs(mean))
union(merged$activity)
unique(merged$activity)
unique(merged$subject)
count(unique(merged$subject))
nrows(unique(merged$subject))
class(unique(merged$subject))
ncol(unique(merged$subject))
nrow(unique(merged$subject))
result <- merged_subset %>% group_by(subject, activity)
str(result)
summarise_each(result,funs = mean)
summarise_each(result,funs = mean())
summarise_each(result,funs(mean))
result <- summarise_each(result,funs(mean))
View(result)
result <- group_by(merged_subset, subject, activity)
result <- summarise_each(result,funs(mean))
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
source('~/R/run_analysis.R')
setwd("UCI HAR Dataset")
ls()
source("run_analysis.R")
source('C:/Users/Alan/OneDrive/Documents/R/UCI HAR Dataset/run_analysis.R')
View(tidy_data)
